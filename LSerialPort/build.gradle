plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    //添加publish
    id 'maven-publish'
    //添加signing
    id 'signing'
}
var mVersionName = "1.0.0"
var mVersionCode = 1
android {
    signingConfigs {
        release {
        }
        debug {

        }
    }
    namespace 'com.redrackham.lserialport'
    compileSdk 33

    defaultConfig {
        minSdk 27
        targetSdk 33
        consumerProguardFiles "consumer-rules.pro"
        ndk {
            //串口默认"armeabi", "armeabi-v7a"
            abiFilters "arm64-v8a", "armeabi-v7a"
            //
        }
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags '-std=c++17'
            }
        }
        versionCode mVersionCode
        versionName mVersionName
    }
    libraryVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "LSerialPort-${defaultConfig.versionName}-${variant.name}.aar"
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
            version "3.22.1"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    publishing {
        singleVariant("debug") {
            // if you don't want sources/javadoc, remove these lines
            withSourcesJar()
            withJavadocJar()
        }
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.5.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}


var signingKeyId = ""//签名的密钥后8位
var signingPassword = ""//签名设置的密码
var secretKeyRingFile = ""//生成的secring.gpg文件目录
var ossrhUsername = ""//sonatype用户名
var ossrhPassword = "" //sonatype密码
var PUBLISH_NAME = ""//推送用户名
var PUBLISH_GROUP_ID = ""//groupid
var PUBLISH_EMAIL = ""//email

var localProperties = project.rootProject.file("local.properties")

if (localProperties.exists()) {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    signingKeyId = properties.getProperty("signing.keyId")
    signingPassword = properties.getProperty("signing.password")
    secretKeyRingFile = properties.getProperty("signing.secretKeyRingFile")
    ossrhUsername = properties.getProperty("ossrhUsername")
    ossrhPassword = properties.getProperty("ossrhPassword")
    PUBLISH_NAME = properties.getProperty("PUBLISH_NAME")
    PUBLISH_GROUP_ID = properties.getProperty("PUBLISH_GROUP_ID")
    PUBLISH_EMAIL = properties.getProperty("PUBLISH_EMAIL")

} else {
    println("No props file, loading env vars")
}

afterEvaluate {
    publishing {
        publications {
            uploadToMavenCentral(MavenPublication) {
                /* groupId:注册的Sonatype Group Id
                 * artifactId:项目唯一标识，一般是工程名
                 * version:库的版本号
                 * artifact:工程项目，这里是上传aar包，所以指向aar包的生成地址
                 *
                 * gradle引入式：implementation ‘groupId:artifactId:version’
                 * 比如：implementation 'io.github.RedRackham-R:LSerialPort:1.0.0-debug'
                 *
                 * */
                groupId = PUBLISH_GROUP_ID
                artifactId = "LSerialPort"
                version = mVersionName + "-debug"
                artifact("$buildDir/outputs/aar/${project.getName()}-${mVersionName}-debug.aar")
                pom {
                    //项目名 （任意填）
                    name.value("LSerialPort")
                    //项目介绍 （任意填）
                    description.value("LSerialPort A C++ implementation of multi-threaded management read and write serial port Android library")
                    //项目地址
                    url.value("https://github.com/RedRackham-R/LSerialPort")
                    //协议类型 默认是Apache License，你想要换也可以改成别的
                    licenses {
                        license {
                            name = 'The MIT License'
                            url = "https://github.com/RedRackham-R/LSerialPort/blob/master/LICENSE"
                        }
                    }
                    //开发者信息，id，名字，邮箱之类的
                    developers {
                        developer {
                            id.value(PUBLISH_NAME)
                            name.value(PUBLISH_NAME)
                            email.value(PUBLISH_EMAIL)
                        }
                    }
                    //版本控制信息，下面是github格式参考，把地址替换成自己的
                    scm {
                        //git地址
                        connection.value("scm:git@github.com/RedRackham-R/LSerialPort.git")
                        developerConnection.value("scm:git@github.com/RedRackham-R/LSerialPort.git")
                        //工程url地址
                        url.value("https://github.com/RedRackham-R/LSerialPort")
                    }
                }
            }
        }
        repositories {
            maven {
                url = uri("https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/")
                credentials {
                    //你的sonatype账号
                    username = ossrhUsername
                    //你的sonatype密码
                    password = ossrhPassword
                }
            }
        }
    }
}

//signing的配置数据在编译后必须是project的properties，即在全局可识别。
//这里的配置的数据可供整个Project全局访问。
gradle.taskGraph.whenReady {
    allprojects {
        ext["signing.keyId"] = signingKeyId
        ext["signing.password"] = signingPassword
        ext["signing.secretKeyRingFile"] = secretKeyRingFile
    }
}

signing {
    sign(publishing.publications)
}
